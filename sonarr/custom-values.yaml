# Default values for sonarr.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: hotio/sonarr
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

deployment:
  # -- Deployment strategy
  strategy:
    type: Recreate

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # -- If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  {}
  # fsGroup: 2000

securityContext:
  {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 8989

ingress:
  enabled: true
  className: "nginx"
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: sonarr.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources:  {}
  # -- We usually recommend not to specify default resources and to leave this as a conscious
  # -- choice for the user. This also increases chances charts run on environments with little
  # -- resources, such as Minikube. If you do want to specify resources, uncomment the following
  # -- lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

env:
  PUID: "1000"
  PGID: "1000"
  TZ: "Europe/London"
  UMASK: "002"

persistence:
  storageClass: "fast-nvme-sonarr-tv"
  # existingClaim: ""
  enabled: true
  accessMode: ReadWriteOnce
  size: 2Gi
  # -- if you need any additional volumes, you can define them here
  additionalVolumes:
    - name: media
      persistentVolumeClaim:
        claimName: nfs-tv
    - name: torrent
      persistentVolumeClaim:
        claimName: nfs-torrent
  # -- if you need any additional volume mounts, you can define them here
  additionalMounts:
    - name: media
      mountPath: /media # path in the container
    - name: torrent
      mountPath: /torrent # path in the container
